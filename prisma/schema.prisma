// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPERVISOR
  MANAGER
  LOGISTIC
  DRIVER
  DISPATCH
  ASSISTANT_MANAGER
}

enum UserLevel {
  MASTER
  ADMIN
  STAFF
}

enum GenericRequestStatus {
  PENDING
  REJECTED
  ACCEPTED
}

enum USAState {
  ALABAMA
  ALASKA
  ARIZONA
  ARKANSAS
  CALIFORNIA
  COLORADO
  CONNECTICUT
  DELAWARE
  FLORIDA
  GEORGIA
  HAWAII
  IDAHO
  ILLINOIS
  INDIANA
  IOWA
  KANSAS
  KENTUCKY
  LOUISIANA
  MAINE
  MARYLAND
  MASSACHUSETTS
  MICHIGAN
  MINNESOTA
  MISSISSIPPI
  MISSOURI
  MONTANA
  NEBRASKA
  NEVADA
  NEW_HAMPSHIRE
  NEW_JERSEY
  NEW_MEXICO
  NEW_YORK
  NORTH_CAROLINA
  NORTH_DAKOTA
  OHIO
  OKLAHOMA
  OREGON
  PENNSYLVANIA
  RHODE_ISLAND
  SOUTH_CAROLINA
  SOUTH_DAKOTA
  TENNESSEE
  TEXAS
  UTAH
  VERMONT
  VIRGINIA
  WASHINGTON
  WEST_VIRGINIA
  WISCONSIN
  WYOMING
}

model User {
  id Int @id @default(autoincrement())
  level UserLevel @default(STAFF)
  name String
  email String @unique
  password String

  birthday DateTime
  hireDate DateTime
  phone String
  active Boolean @default(false)
  guardCard Boolean @default(false)

  supervisorCount Int @default(0)
  managerCount Int @default(0)
  logisticCount Int @default(0)
  driverCount Int @default(0)
  dispatchCount Int @default(0)
  assistantManagerCount Int @default(0)

  contactName String?
  contactPhone String?

  eventUserList EventUserList[]
}

model Event {
  id Int @id @default(autoincrement())
  name String
  city String
  state USAState @default(CALIFORNIA)
  zipCode String
  street String
  internalNumber Int?
  externalNumber Int?

  startDate DateTime
  endDate DateTime
  public Boolean @default(false)
  done Boolean @default(false)
  maxUsers Int @default(1)

  eventUsers EventUserList[]
  sections EventSection[]
}

model EventSection {
  id Int @id @default(autoincrement())
  eventId Int
  sectionName String
  description String?
  event Event @relation(fields: [eventId], references: [id])

  files SectionFile[]
}

model SectionFile {
  id Int @id @default(autoincrement())
  sectionId Int
  name String
  dataBytes Bytes
  section EventSection @relation(fields: [sectionId], references: [id])
}

model EventUserList {
  id Int @id @default(autoincrement())
  userId Int 
  eventId Int
  role UserRole
  user User @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
}